BASE_TASK_CONFIG_PATH: projects/stretch_ovmm/configs/task/floorplanner_val.yaml

NO_GPU: 1                 # 1: ignore IDs above and run on CPU, 0: run on GPUs with IDs above
NUM_ENVIRONMENTS: 35      # number of environments (per agent process)
DUMP_LOCATION: datadump   # path to dump models and log
EXP_NAME: eval_floorplanner       # experiment name
VISUALIZE: 0              # 1: render observation and predicted semantic map, 0: no visualization
PRINT_IMAGES: 1           # 1: save visualization as images, 0: no image saving
GROUND_TRUTH_SEMANTICS: 0 # 1: use ground-truth semantics (for debugging / ablations)
seed: 0

ENVIRONMENT:
  forward: 0.25           # forward motion (in meters)
  turn_angle: 30.0        # agent turn angle (in degrees)
  frame_height: 640       # first-person frame height (in pixels)
  frame_width: 480        # first-person frame width (in pixels)
  camera_height: 0.88     # camera sensor height (in metres)
  hfov: 42.0              # horizontal field of view (in degrees)
  min_depth: 0.5          # minimum depth for depth sensor (in metres)
  max_depth: 5.0          # maximum depth for depth sensor (in metres)

CORLAGENT:
  gt_run: True

AGENT:
  max_steps: 500          # maximum number of steps before stopping an episode
  panorama_start: 1       # 1: turn around 360 degrees when starting an episode, 0: don't
  exploration_strategy: seen_frontier  # exploration strategy ("seen_frontier", "been_close_to_frontier")
  radius: 0.17            # robot radius (in meters)
  clip_embeddings_file: data/objects/clip_embeddings.pickle
  task_information_file: projects/slap_manipulation/assets/task_information.yaml
  language_file: projects/slap_manipulation/assets/language.yaml
  dry_run: False

  SEMANTIC_MAP:
    semantic_categories: mukul_indoor # map semantic channel categories ("coco_indoor", "longtail_indoor", "mukul_indoor")
    num_sem_categories: 5             # number of map semantic channel categories (16, 257, 35)
    map_size_cm: 4800        # global map size (in centimeters)
    map_resolution: 5        # size of map bins (in centimeters)
    vision_range: 100        # diameter of local map region visible by the agent (in cells)
    global_downscaling: 2    # ratio of global over local map
    du_scale: 4              # frame downscaling before projecting to point cloud
    cat_pred_threshold: 1.0  # number of depth points to be in bin to classify it as a certain semantic category
    exp_pred_threshold: 1.0  # number of depth points to be in bin to consider it as explored
    map_pred_threshold: 1.0  # number of depth points to be in bin to consider it as obstacle
    been_close_to_radius: 200  # radius (in centimeters) of been close to region
    explored_radius: 150       # radius (in centimeters) of visually explored region
    must_explore_close: False
    min_obs_height_cm: 10    # minimum height (in centimeters) of obstacle to be considered as obstacle

  SKILLS:
    GAZE:
      checkpoint_path: data/checkpoints/ovmm/gaze.pth
      rl_config: projects/habitat_ovmm/configs/agent/gaze_rl.yaml # with continuous actions
      gym_obs_keys:
        - robot_head_depth
        - object_embedding
        - object_segmentation
        - joint
        - is_holding
        - relative_resting_position
      allowed_actions:
        - arm_action
        - base_velocity
      arm_joint_mask: [0, 0, 0, 0, 0, 0, 1] # the arm joints that the policy can control
      max_forward: 0.25
      max_turn: 0.1745

  PLANNER:
    collision_threshold: 0.20       # forward move distance under which we consider there's a collision (in meters)
    # obs_dilation_selem_radius: 3    # radius (in cells) of obstacle dilation structuring element
    # goal_dilation_selem_radius: 10  # radius (in cells) of goal dilation structuring element
    min_obs_dilation_selem_radius: 3    # radius (in cells) of obstacle dilation structuring element
    obs_dilation_selem_radius: 10    # radius (in cells) of obstacle dilation structuring element
    goal_dilation_selem_radius: 30  # radius (in cells) of goal dilation structuring element
    step_size: 10                    # maximum distance of the short-term goal selected by the planner
    use_dilation_for_stg: False      # use dilated goals for estimating short-term goals - or just reaching
    map_downsample_factor: 1            # optional downsampling of traversible and goal map before fmm distance call (1 for no downsampling, 2 for halving resolution)
    map_update_frequency: 1             # compute fmm distance map every n steps 
    discrete_actions: False         # discrete motion planner output space or not
    min_goal_distance_cm: 65
    continuous_angle_tolerance: 20

EVAL_VECTORIZED:
  simulator_gpu_ids: [1, 2, 3, 4, 5, 6, 7] # IDs of GPUs to use for vectorized environments
  specific_episodes: 0      # 1: eval on specific episodes (for debugging), 0: eval on split normally
  goal_on_same_floor: 0     # 1: restrict to episodes with a goal on the same floor as the starting position
  split: val                # eval split
  num_episodes_per_env: 100 # number of eval episodes per environment
  record_videos: 0          # 1: record videos from printed images, 0: don't
  record_planner_videos: 0  # 1: record planner videos (if record videos), 0: don't

SLAP:
  dry_run: False
  min_depth: 0.3
  max_depth: 1.5
  x_max: 0.9  # do not care about objects beyond a meter-ish 
  z_min: 0.15  # 15cm
  voxel_size_1: 0.001
  voxel_size_2: 0.01
  IPM:
    validate: False
    datadir: False
    template: "*.h5"
    load: False
    resume: False
    debug: False
    learning_rate: 1e-3
    task_name: open_drawer
    source: stretch
    run_for: -1
    wandb: False
    split: False
    data_augmentation: True
    color_jitter: False
    loss_fn: "xent"
    max_iter: 30
    path: data/checkpoints/corl/ipm.pth
  APM:
    task_name: test
    action_idx: -1
    datadir: False
    split: False
    load: False
    max_actions: 6
    # path: data/checkpoints/corl/apm.pth
    path: projects/slap_manipulation/outputs/2023-06-06/17-31-38/best_action_predictor_corl_experiment.pth

    num_pts: 8000
    orientation_type: "quaternion"  # change orientation_dim when you change this
    learning_rate: 1e-4
    lambda_weight_l2: 0.00001
    optim: adam
    multi_step: True
    num_heads: 1
    crop_size: 0.1
    query_radius: 0.16
    k: 3  # will change per task, read from task_information.yaml
    lang_max_seq_len: 77
    clip_model: "ViT-B/32"
    max_iter: 50
    dry_run: False
    validate: False
    template: "*.h5"
    data_augmentation: True
    source: "stretch"
    wandb: False
    debug: False

    dims:
      proprio_in: 8
      proprio_out: 64
      image_in: 4
      lang_emb_out: 512
      position: 3
      orientation: 4
      # rgb_out:

    handover_weights:
      position: 1e-1
      orientation: 1e-1
      gripper: 1e-4

    weights:
      position: 1.0
      orientation: 1e-3
      gripper: 1e-4

    model:
      sa1_mlp: [7, 64, 128]
      sa2_mlp: [131, 128, 256]
      sa3_mlp: [259, 256,512]
      proprio_mlp: [64, 256, 512]
      lang_mlp: [512, 512, 512]
      time_mlp: [6, 256, 512]
      pre_process_mlp: [2048, 1024, 1024, 512, 512]
      post_process_mlp: [512, 512, 256, 256, 128, 64]
      gru_dim: 512

    regression_head:
      final_dim: 64
      pos_mlp: [256, 128, 64]
      ori_mlp: [256, 128, 64]
      gripper_mlp: [1536, 512, 64]
      pos_in_channels: 3

    per_action_cmd: False
    gru_hidden_dim: 512
    gru_hidden_layers: 2
    use_mdn: False
    skill_to_action_file: projects/slap_manipulation/configs/per_cmd_language.yaml
    # name: test
    # action_idx: -1
    # datadir: False
    # split: False
    # load: False
    # max_actions: 6
    # skill_to_action_file: projects/slap_manipulation/configs/per_cmd_language.yaml
    #
    # num_pts: 8000
    # orientation_type: "quaternion"  # change orientation_dim when you change this
    # learning_rate: 1e-4
    # lambda_weight_l2: 0.00001
    # optim: adam
    # multi_step: True
    # num_heads: 1
    # crop_size: 0.1
    # query_radius: 0.2
    # k: 3  # will change per task, read from task_information.yaml
    # lang_max_seq_len: 77
    # clip_model: "ViT-B/32"
    # max_iter: 50
    # dry_run: False
    # validate: False
    # template: "*.h5"
    # data_augmentation: False
    # source: "stretch"
    # wandb: False
    # debug: False
    #
    # dims:
    #   proprio_in: 8
    #   proprio_out: 64
    #   image_in: 4
    #   lang_emb_out: 512
    #   position: 3
    #   orientation: 4
    #   # rgb_out:
    #
    # weights:
    #   position: 1.0
    #   orientation: 1e-3
    #   gripper: 1e-4
    #
    # run:
    #   validate: False
    #
    # model:
    #   sa1_mlp: [7, 64, 128]
    #   sa2_mlp: [131, 128, 256]
    #   sa3_mlp: [259, 256,512]
    #   proprio_mlp: [64, 256, 512]
    #   lang_mlp: [512, 512, 512]
    #   time_mlp: [6, 256, 512]
    #   pre_process_mlp: [2048, 1024, 1024, 512, 512]
    #   post_process_mlp: [512, 512, 256, 256, 128, 64]
    #   gru_dim: 512
    #
    # regression_head:
    #   final_dim: 64
    #   pos_mlp: [256, 128, 64]
    #   ori_mlp: [256, 128, 64]
    #   gripper_mlp: [1536, 512, 64]
    #   pos_in_channels: 3
    #
    # per_action_cmd: False
    # gru_hidden_dim: 512
    # gru_hidden_layers: 2
    # use_mdn: False

TASKS:
  std_names:
  - open-object-drawer
  - close-object-drawer
  - handover-to-person
  - take-bottle
  - pour-into-bowl
  - pour-into-sink
  - sweep-table-with-brush

